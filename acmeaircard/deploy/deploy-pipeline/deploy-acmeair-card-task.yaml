apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: deploy-acmeair-card
  namespace: acmeaircard
spec:
  params:
    - name: imageLocation
      type: string
    - name: applicationHost
      type: string
  steps:
    - image: >-
        intreg0.fpet.pokprv.stglabs.ibm.com:5000/openshift/cli:latest
      name: create-card-deployment
      resources: {}
      script: |
        #!/bin/bash

        cat <<EOF | oc apply -f -
          apiVersion: apps/v1
          kind: Deployment
          metadata:
            name: acmeair-cardservice
          spec:
            replicas: 1
            selector:
              matchLabels:
                name: acmeair-card-deployment
            template:
              metadata:
                labels:
                  name: acmeair-card-deployment
                  app: acmeair-3
              spec:
                containers:
                  - name: acmeair-cardservice-java
                    image: $(params.imageLocation)/$(context.taskRun.namespace)/acmeair-cardservice-java:latest
                    ports:
                      - containerPort: 8080
                      - containerPort: 8443
                    env:
                    - name: USERNAME
                      value: admin
                    - name: PASSWORD
                      value: password
                    - name: MONGO_PORT
                      value: "27017"
                    - name: MONGO_HOST
                      value: acmeair-card-db
                    - name: MQENVURL
                      value: "/mq-files/conf/env.json"
                    - name: MQCCDTURL
                      value: "file:///mq-files/conf/ccdt.json"
                    - name: MQCLNTCF
                      value: "file:///mq-files/conf/mqclient.ini"
                    - name: MQCLIENTKEYSTORE
                      value: "file:///mq-files/keys/clientkey.jks"
                    imagePullPolicy: Always
                    volumeMounts:
                      - mountPath: /mq-files/conf/ccdt.json
                        subPath: ccdt.json
                        name: mq-conf-files
                      - mountPath: /mq-files/conf/mqclient.ini
                        subPath: mqclient.ini
                        name: mq-conf-files
                      - mountPath: /mq-files/conf/env.json
                        subPath: env.json
                        name: mq-conf-files
                volumes:
                - configMap:
                    items:
                    - key: env.json
                      path: env.json
                    - key: ccdt.json
                      path: ccdt.json
                    - key: mqclient.ini
                      path: mqclient.ini
                    name: mq-conf-files
                  name: mq-conf-files
                - secret:
                    secretName: mq-client-keys
                    items:
                    - key: clientkey.jks
                      path: clientkey.jks
                  name: mq-client-keys
        EOF
    - image: 'intreg0.fpet.pokprv.stglabs.ibm.com:5000/openshift/cli:latest'
      name: create-card-service
      resources: {}
      script: |
        #!/bin/bash

        cat <<EOF | oc apply -f -
          apiVersion: v1
          kind: Service
          metadata:
            name: acmeair-card-service
          spec:
            ports:
              - port: 8080
            selector:
              name: acmeair-card-deployment
        EOF
    - image: 'intreg0.fpet.pokprv.stglabs.ibm.com:5000/openshift/cli:latest'
      name: create-card-db-service
      resources: {}
      script: |
        #!/bin/bash

        cat <<EOF | oc apply -f -
          ##### Credit Cards Database  #####
          apiVersion: v1
          kind: Service
          metadata:
            creationTimestamp: null
            labels:
              service: acmeair-card-db
            name: acmeair-card-db
          spec:
            ports:
            - name: "27017"
              port: 27017
              protocol: TCP
              targetPort: 27017
            selector:
              name: acmeair-card-db
          status:
            loadBalancer: {}
        EOF
    - image: 'intreg0.fpet.pokprv.stglabs.ibm.com:5000/openshift/cli:latest'
      name: create-card-db-deployment
      resources: {}
      script: |
        #!/bin/bash

        cat <<EOF | oc apply -f -
          apiVersion: apps/v1
          kind: Deployment
          metadata:
            creationTimestamp: null
            name: acmeair-card-db
          spec:
            replicas: 1
            selector:
              matchLabels:
                name: acmeair-card-db
            strategy: {}
            template:
              metadata:
                creationTimestamp: null
                labels:
                  name: acmeair-card-db
              spec:
                volumes:
                  - name: acmeair-card-db-1
                    emptyDir: {}
                  - name: acmeair-card-db-2
                    emptyDir: {}
                containers:
                - image: $(params.imageLocation)/$(context.taskRun.namespace)/mongo:latest
                  name: acmeair-card-db
                  ports:
                  - containerPort: 27017
                    protocol: TCP
                  resources: {}
                  volumeMounts:
                    - name: acmeair-card-db-1
                      mountPath: /data/configdb
                    - name: acmeair-card-db-2
                      mountPath: /data/db
                restartPolicy: Always
          status: {}
        EOF
        sleep 120
    - image: >-
        intreg0.fpet.pokprv.stglabs.ibm.com:5000/openshift/cli:latest
      name: create-card-route
      resources: {}
      script: |
        #!/bin/bash
        cat <<EOF | oc apply -f -
          apiVersion: route.openshift.io/v1
          kind: Route
          metadata:
            name: acmeair-card-route
          spec:
            path: /acmeair-cardservice
            host: $(params.applicationHost)
            to:
              kind: Service
              name: acmeair-card-service
        EOF
    - image: 'intreg0.fpet.pokprv.stglabs.ibm.com:5000/openshift/cli:latest'
      name: create-services
      resources: {}
      script: |
        #!/bin/bash

        cat <<EOF | oc apply -f -
          apiVersion: route.openshift.io/v1
          kind: Route
          metadata:
            name: acmeair-card-openapi-route
          spec:
            path: /openapi
            host: $(params.applicationHost)
            to:
              kind: Service
              name: acmeair-card-service
        EOF
        sleep 30